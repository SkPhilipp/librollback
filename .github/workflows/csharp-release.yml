name: c# release

on:
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '2.1.x'
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - name: Build
        env:
          TOKEN: ${{ secrets.GH_TOKEN_SCOPE_PACKAGES }}
        run: |
          dotnet nuget add source --username USERNAME --password "${TOKEN}" --store-password-in-clear-text --name github-effortgames "https://nuget.pkg.github.com/EffortGames/index.json"
          dotnet build .
      - name: Test
        run: |
          dotnet test .
      - name: Publish
        shell: bash
        env:
          PROJECT: rollback
          TOKEN: ${{ secrets.GH_TOKEN_SCOPE_PACKAGES }}
        run: |
          # obtain .github/VERSION & increment it
          if [ ! -f .github/VERSION ]; then
            echo "1.0.0" > .github/VERSION
          fi
          VERSION=$(cat .github/VERSION)
          MAJOR=$(echo "${VERSION}" | cut -d'.' -f1)
          MINOR=$(echo "${VERSION}" | cut -d'.' -f2)
          PATCH=$(echo "${VERSION}" | cut -d'.' -f3)
          PATCH=$(("${PATCH}" + 1))
          echo "$MAJOR.$MINOR.$PATCH" > .github/VERSION
          # build and release
          cd "${PROJECT}"
          dotnet pack . --configuration Release "-p:Version=${VERSION}"
          dotnet nuget push "bin/Release/*.nupkg" --api-key "${TOKEN}" --source "github-effortgames"
